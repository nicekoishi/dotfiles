# how many frames does img have?
frames = 90;

# variables?
screenH = Window.GetHeight(0);
screenW = Window.GetWidth(0);
screen.halfH = screenH / 2;
screen.halfW = screenW / 2;

progress = 1;

# Background
Window.SetBackgroundTopColor (0, 0, 0);
Window.SetBackgroundBottomColor (0, 0, 0);

# question and password prompts prep
prompt = null;
response = null;
bulletImage = Image("dot.png").Scale(10, 10);

textLineHeight = Image.Text("adadwcdadadcw").GetHeight();
promptY = screenH * 0.75;
responseY = promptY + textLineHeight * 4;
messageY = promptY + textLineHeight * 4;

# Image animation loop
for (i = 1; i < frames; i++)
  dancingImage[i] = Image(i + ".png");

# sprite declaration and positioning
dancingSprite = Sprite();
dancingSprite.SetX(Window.GetX() + (screen.halfW - dancingImage[1].GetWidth() / 2)); # Place in the centre
dancingSprite.SetY(Window.GetY() + (screen.halfH - dancingImage[1].GetHeight() / 2));

# Plymouth Callback
fun refresh_callback ()
  {
    dancingSprite.SetImage(dancingImage[Math.Int(progress / 2) % frames]);
    progress++;
  }
  
Plymouth.SetRefreshFunction (refresh_callback);

# prompts base

fun displayPrompt(inputText) {
    promptImage = Image.Text(inputText, 1, 1, 1);
    promptSprite = Sprite(promptImage);
    promptSprite.SetX(screen.halfW - promptImage.GetWidth() / 2);
    promptSprite.SetY(promptY);
}

# questions
fun displayQuestion(inputText, entry) {
    displayPrompt(inputText);

    configAlpha = 1.0;
    configFont = "Sans Bold 12";
    if (entry == "") {
        entry = "pls answer";
        configAlpha = 0.5;
        configFont = "Sans 12"
    }

    response = null;
    responseImage = Image.Text(entry, 1, 1, 1, configAlpha, configFont);
    response.sprite = Sprite(responseImage);
    response.sprite.SetX(screen.halfW - responseImage.GetWidth() / 2);
    response.sprite.SetY(responseY);
}

Plymouth.SetDisplayQuestionFunction(displayQuestion);

# funny password prompt
fun displayPasswordPrompt(inputText, dotCount) {
    displayPrompt(inputText);

    response = null;
    if (dotCount > 0) {
        dotPosStart = screen.halfW - (dotCount * bulletImage.GetWidth()) / 2;
        for (i = 0; i< dotCount; i++) {
            response[i].sprite = Sprite(bulletImage);
            response[i].sprite.SetX(dotPosStart + i * bulletImage.GetWidth());
            response[i].sprite.SetY(responseY + (textLineHeight - bulletImage.GetHeight()) / 2);
        }
    } else {
        responseImage = Image.Text("Enter passphrase", 1, 1, 1, 0.5);
        response.sprite = Sprite(responseImage);
        response.sprite.SetX(screen.halfW - responseImage.GetWidth() / 2);
        response.sprite.SetY(responseY);
    }
}

Plymouth.SetDisplayPasswordFunction(displayPasswordPrompt);


# normal - unset all text
fun displayNormal() {
    prompt = null;
    message = null;
    response = null;
}
Plymouth.SetDisplayNormalFunction(displayNormal);

# message?
fun messageCallback(text) {
    messageImage = Image.Text(text, 1, 1, 1, 0.75, "Sans 10");
    message.sprite = Sprite(messageImage);
    message.sprite.SetPosition(screen.halfW - messageImage.GetWidth() / 2, messageY);
}
Plymouth.SetMessageFunction(messageCallback);

(defwindow bar
    :monitor 0
    :geometry (geometry :x "0%" :y "0px" :width "100%" :height "25px" :anchor "top center")
    :stacking "fg"
    :exclusive "true"
    :focusable "false"
    :namespace "eww-bar"
  (bar))

(defwindow calendar
    :monitor 0
    :geometry (geometry :x "0%" :y "0px" :width "20%" :height "96px" :anchor "top right")
    :stacking "overlay"
    :exclusive "false"
    :focuseable "true"
    :namespace "eww-calendar"
  (ewwcalendar))

(defwindow music
    :monitor 0
    :geometry (geometry :x "0%" :y "4px" :width "21%" :height "16%" :anchor "top center")
    :stacking "overlay"
    :exclusive "false"
    :focuseable "true"
    :namespace "eww-music"
  (nowplaying))

(defwidget ewwcalendar []
  (calendar :class "ewwcalendar"))

(defwidget bar []
  (centerbox :class "bar" :orientation "h" (workspaces)(active)(side)))

(defwidget nowplaying []
  (box :class "nowplaying-box"
   (box :class "nowplaying-img" :halign "center" :style "background-image: url('${nowplaying-thumb}')")
   (box :class "nowplaying-box-info" :orientation "v"
        (box :class "nowplaying-title" :halign "start" nowplaying-title)
        (box :class "nowplaying-artist" :halign "start" nowplaying-artist)
        (box :class "media-controls" :halign "center" :orientation "h" :spacing 16 :space-evenly false
             (button :class "media-previous-button" :onclick "playerctl previous" :halign "start" "󰒮")
             (button :class "media-play-pause" :onclick "playerctl play-pause" :halign "center" playerstatus)
             (button :class "media-next-button" :onclick "playerctl next" :halign "end" "󰒭"))
        (box :class "now-playing-progress" :halign "center" :vexpand false :hexpand false
             (scale :onchange "playerctl position {}%" :min 0 :max 101 :active true :value nowplaying-time)))))

(defwidget volumeinfo []
  (box :class "volume-info"
       (label :class "vol-icon" :text "󰋎 ")
       (label :class "vol-num" :text volume)
       (label :text "%")))

(defwidget micinfo []
  (box :class "micinfo"
       (label :class "mic-icon" :text " ")
       (label :class "mic-num" :text volumeMic)
       (label :text "%")))

(defwidget workspaces []
  (box :class "workspaces" :orientation "h" :space-evenly true :halign "start" :spacing 10
       (button :onclick "hyprctl dispatch workspace 1" "www")
       (button :onclick "hyprctl dispatch workspace 2" "sys")
       (button :onclick "hyprctl dispatch workspace 3" "chat")
       (button :onclick "hyprctl dispatch workspace 4" "spot")
       (button :onclick "hyprctl dispatch workspace 5" "game")
       (button :onclick "hyprctl dispatch workspace 6" "vbox ")))

(defwidget active []
  (button :class "widget-center" :halign "center" :onclick "eww open --toggle music" active))

(defwidget side []
  (box :class "side-widgets" :orientation "h" :space-evenly true :halign "end"
       (box :class "media-slider-box" :orientation "h" :space-evenly false :halign "end"
            (eventbox :class "eventbox-mic-slider" :onscroll "scripts/sys_info mic{}"
                      (button :class "mic-slider-button" :onclick "wpctl set-" (micinfo)))
            (eventbox :class "eventbox-volume-slider" :onscroll "scripts/sys_info vol{}"
                      (button :class "volume-slider-button" (volumeinfo))))
       (box :class "clock-side" :orientation "h" :space-evenly false :halign "end"
            (button :class "clock-content" :onclick "eww open --toggle calendar" time))))

(defpoll nowplaying-artist :interval "1s"
  "scripts/sys_info --nowplaying-artist")

(defpoll nowplaying-title :interval "1s"
  "scripts/sys_info --nowplaying-title")

(defpoll nowplaying-time :interval "150ms"
  "scripts/sys_info --nowplaying-time")

(defpoll nowplaying-thumb :interval "1s"
  "scripts/sys_info --nowplaying-album")

(defpoll playerstatus :interval "500ms"
  "scripts/sys_info --playerstatus")

(defpoll active :interval "150ms"
  "scripts/sys_info --active")

(defpoll time :interval "1s"
  "scripts/sys_info --date")

(defpoll volume :interval "150ms"
  "scripts/sys_info --volume")

(defpoll volumeMic :interval "150ms"
  "scripts/sys_info --microphone")

# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    initrd.availableKernelModules = ["xhci_pci" "ahci" "usbhid" "sd_mod"];
    initrd.kernelModules = [];
    kernelModules = ["kvm-amd"];
    extraModulePackages = [];
  };

  boot.loader.efi.canTouchEfiVariables = true;
  boot.loader.systemd-boot = {
    enable = true;
    configurationLimit = 12;
    consoleMode = "max";
  };

  hardware = {
    opengl = {
      enable = true;
      extraPackages = with pkgs; [nvidia-vaapi-driver];
      driSupport = true;
      driSupport32Bit = true;
    };
    nvidia = {
      package = let
        rcu_patch = pkgs.fetchpatch {
          url = "https://github.com/gentoo/gentoo/raw/c64caf53/x11-drivers/nvidia-drivers/files/nvidia-drivers-470.223.02-gpl-pfn_valid.patch";
          hash = "sha256-eZiQQp2S/asE7MfGvfe6dA/kdCvek9SYa/FFGp24dVg=";
        };
      in
        config.boot.kernelPackages.nvidiaPackages.mkDriver {
          version = "535.154.05";
          sha256_64bit = "sha256-fpUGXKprgt6SYRDxSCemGXLrEsIA6GOinp+0eGbqqJg=";
          sha256_aarch64 = "sha256-G0/GiObf/BZMkzzET8HQjdIcvCSqB1uhsinro2HLK9k=";
          openSha256 = "sha256-wvRdHguGLxS0mR06P5Qi++pDJBCF8pJ8hr4T8O6TJIo=";
          settingsSha256 = "sha256-9wqoDEWY4I7weWW05F4igj1Gj9wjHsREFMztfEmqm10=";
          persistencedSha256 = "sha256-d0Q3Lk80JqkS1B54Mahu2yY/WocOqFFbZVBh+ToGhaE=";

          patches = [rcu_patch];
        };
      # config.boot.kernelPackages.nvidiaPackages.production; # 550 is unusable as of 24/03/2024
      modesetting.enable = true;
      nvidiaSettings = false;
    };
  };

  services.xserver.videoDrivers = ["nvidia"];

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/418e6ca3-9b74-4cbf-9599-f237a39d931d";
      fsType = "btrfs";
      options = ["subvol=@" "compress=zstd" "noatime" "ssd"];
    };
    "/home" = {
      device = "/dev/disk/by-uuid/418e6ca3-9b74-4cbf-9599-f237a39d931d";
      fsType = "btrfs";
      options = ["subvol=@home" "compress=zstd" "noatime" "ssd"];
    };

    "/nix" = {
      device = "/dev/disk/by-uuid/418e6ca3-9b74-4cbf-9599-f237a39d931d";
      fsType = "btrfs";
      options = ["subvol=@nix" "compress=zstd" "noatime" "ssd"];
    };

    "/boot" = {
      device = "/dev/disk/by-uuid/A807-E933";
      fsType = "vfat";
    };
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  networking.hostName = "polaris";
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}

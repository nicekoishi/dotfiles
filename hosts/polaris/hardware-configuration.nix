# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    initrd.availableKernelModules = ["xhci_pci" "ahci" "usbhid" "sd_mod"];
    initrd.kernelModules = [];
    kernelModules = ["kvm-amd"];
    extraModulePackages = [];
  };

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/418e6ca3-9b74-4cbf-9599-f237a39d931d";
      fsType = "btrfs";
      options = ["subvol=@" "compress=zstd" "noatime" "ssd"];
    };
    "/home" = {
      device = "/dev/disk/by-uuid/418e6ca3-9b74-4cbf-9599-f237a39d931d";
      fsType = "btrfs";
      options = ["subvol=@home" "compress=zstd" "noatime" "ssd"];
    };

    "/nix" = {
      device = "/dev/disk/by-uuid/418e6ca3-9b74-4cbf-9599-f237a39d931d";
      fsType = "btrfs";
      options = ["subvol=@nix" "compress=zstd" "noatime" "ssd"];
    };

    "/boot" = {
      device = "/dev/disk/by-uuid/A807-E933";
      fsType = "vfat";
    };
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  networking.hostName = "polaris";
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}

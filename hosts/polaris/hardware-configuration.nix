# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
<<<<<<< HEAD
=======
  pkgs,
>>>>>>> 12c72a1 (too lazy to separate them all)
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

<<<<<<< HEAD
  fileSystems."/" = {
    device = "/dev/disk/by-uuid/53a6817a-f360-4aa1-87b0-628101865175";
    fsType = "btrfs";
    options = ["subvol=@"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/53a6817a-f360-4aa1-87b0-628101865175";
    fsType = "btrfs";
    options = ["subvol=@nix"];
  };

  fileSystems."/var/log" = {
    device = "/dev/disk/by-uuid/53a6817a-f360-4aa1-87b0-628101865175";
    fsType = "btrfs";
    options = ["subvol=@log"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/53a6817a-f360-4aa1-87b0-628101865175";
    fsType = "btrfs";
    options = ["subvol=@home"];
  };

  fileSystems."/var/cache" = {
    device = "/dev/disk/by-uuid/53a6817a-f360-4aa1-87b0-628101865175";
    fsType = "btrfs";
    options = ["subvol=@cache"];
  };

  fileSystems."/var/lib/libvirt/images" = {
    device = "/dev/disk/by-uuid/53a6817a-f360-4aa1-87b0-628101865175";
    fsType = "btrfs";
    options = ["subvol=@images"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/0DF1-637F";
    fsType = "vfat";
  };
=======
  boot.loader.efi.canTouchEfiVariables = true;
  boot.loader.systemd-boot = {
    enable = true;
    configurationLimit = 12;
    consoleMode = "max";
  };

  hardware.opengl = {
    enable = true;
    extraPackages = with pkgs; [nvidia-vaapi-driver];
    driSupport = true;
    driSupport32Bit = true;
  };

  hardware.nvidia = {
    package = config.boot.kernelPackages.nvidiaPackages.production;
    modesetting.enable = true;
  };

  services.xserver.videoDrivers = ["nvidia"];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/418e6ca3-9b74-4cbf-9599-f237a39d931d";
      fsType = "btrfs";
      options = [ "subvol=@" "compress=zstd" "noatime" "ssd" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/418e6ca3-9b74-4cbf-9599-f237a39d931d";
      fsType = "btrfs";
      options = [ "subvol=@home" "compress=zstd" "noatime" "ssd" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/418e6ca3-9b74-4cbf-9599-f237a39d931d";
      fsType = "btrfs";
      options = [ "subvol=@nix" "compress=zstd" "noatime" "ssd" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/A807-E933";
      fsType = "vfat";
    };
>>>>>>> 12c72a1 (too lazy to separate them all)

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
<<<<<<< HEAD
=======
  networking.hostName = "polaris";
>>>>>>> 12c72a1 (too lazy to separate them all)
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
